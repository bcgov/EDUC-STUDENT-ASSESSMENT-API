ALTER SESSION SET NLS_TIMESTAMP_FORMAT = 'YYYY-MM-DD HH24:MI:SS.FF6';
ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD HH24:MI:SS';

CREATE TABLE ASSESSMENT_SESSION
(
    SESSION_ID                  VARCHAR2(40)                                NOT NULL,
    COURSE_YEAR                 VARCHAR2(4)                          NOT NULL,
    COURSE_MONTH                VARCHAR2(2)                          NOT NULL,
    SCHOOL_YEAR                 VARCHAR2(10)                         NOT NULL,
    ACTIVE_FROM_DATE            TIMESTAMP                           NOT NULL,
    ACTIVE_UNTIL_DATE           TIMESTAMP                           NOT NULL,
    CREATE_USER                 VARCHAR(100)                        NOT NULL,
    CREATE_DATE                 TIMESTAMP DEFAULT SYSDATE NOT NULL,
    UPDATE_USER                 VARCHAR(100)                        NOT NULL,
    UPDATE_DATE                 TIMESTAMP DEFAULT SYSDATE NOT NULL,
    CONSTRAINT SESSION_ID_PK PRIMARY KEY (SESSION_ID)
);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2018', '01', '2017/2018',
        to_date('2017-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2018-02-28 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2018', '04', '2017/2018',
        to_date('2017-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2018-04-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2018', '06', '2017/2018',
        to_date('2017-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2018-06-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2018', '11', '2018/2019',
        to_date('2018-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2018-11-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2019', '01', '2018/2019',
        to_date('2018-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2019-02-28 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2019', '04', '2018/2019',
        to_date('2018-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2019-04-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2019', '06', '2018/2019',
        to_date('2018-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2019-06-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2019', '11', '2019/2020',
        to_date('2019-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2019-11-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2020', '01', '2019/2020',
        to_date('2019-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2020-02-28 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2020', '04', '2019/2020',
        to_date('2019-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2020-04-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2020', '06', '2019/2020',
        to_date('2019-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2020-06-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2020', '11', '2020/2021',
        to_date('2020-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2020-11-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2021', '01', '2020/2021',
        to_date('2020-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2021-02-28 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2021', '04', '2020/2021',
        to_date('2020-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2021-04-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2021', '06', '2020/2021',
        to_date('2020-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2021-06-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2021', '11', '2021/2022',
        to_date('2021-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2021-11-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2022', '01', '2021/2022',
        to_date('2021-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2022-02-28 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2022', '04', '2021/2022',
        to_date('2021-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2022-04-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2022', '06', '2021/2022',
        to_date('2021-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2022-06-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2022', '11', '2022/2023',
        to_date('2022-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2022-11-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2023', '01', '2022/2023',
        to_date('2022-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2023-02-28 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2023', '04', '2022/2023',
        to_date('2022-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2023-04-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2023', '06', '2022/2023',
        to_date('2022-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2023-06-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2023', '11', '2023/2024',
        to_date('2023-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2023-11-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2024', '01', '2023/2024',
        to_date('2023-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2024-02-28 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2024', '04', '2023/2024',
        to_date('2023-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2024-04-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2024', '06', '2023/2024',
        to_date('2023-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2024-06-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2024', '11', '2024/2025',
        to_date('2024-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2024-11-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2025', '01', '2024/2025',
        to_date('2024-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2025-02-28 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2025', '04', '2024/2025',
        to_date('2024-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2025-04-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2025', '06', '2024/2025',
        to_date('2024-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2025-06-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2025', '11', '2025/2026',
        to_date('2025-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2025-11-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2026', '01', '2025/2026',
        to_date('2025-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2026-02-28 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2026', '04', '2025/2026',
        to_date('2025-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2026-04-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT_SESSION (SESSION_ID, COURSE_YEAR, COURSE_MONTH, SCHOOL_YEAR, ACTIVE_FROM_DATE,
                                ACTIVE_UNTIL_DATE, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        '2026', '06', '2025/2026',
        to_date('2025-10-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
        to_date('2026-06-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

CREATE TABLE ASSESSMENT
as
SELECT
    LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')) as ASSESSMENT_ID,
    (SELECT SESSION_ID FROM ASSESSMENT_SESSION sess
     WHERE sess.COURSE_YEAR = SUBSTR( TRIM(grad_assmnt.ASSMT_SESSION), 0 , 4)
       AND sess.COURSE_MONTH = SUBSTR(TRIM(grad_assmnt.ASSMT_SESSION), 5)) AS SESSION_ID,
    TRIM(grad_assmnt.ASSMT_CODE) as ASSESSMENT_TYPE_CODE,
    'ASSESSMENT-API' as CREATE_USER,
    SYSDATE as CREATE_DATE,
    'ASSESSMENT-API' as UPDATE_USER,
    SYSDATE as UPDATE_DATE
FROM TAB_AVAILABLE_GRAD_ASSMT_SESS grad_assmnt
WHERE (SELECT SESSION_ID FROM ASSESSMENT_SESSION sess
       WHERE sess.COURSE_YEAR = SUBSTR( TRIM(grad_assmnt.ASSMT_SESSION), 0 , 4)
         AND sess.COURSE_MONTH = SUBSTR(TRIM(grad_assmnt.ASSMT_SESSION), 5)) IS NOT null;

CREATE TABLE ASSESSMENT_FORM
as
SELECT
    LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')) as ASSESSMENT_FORM_ID,
    (SELECT assmnt.ASSESSMENT_ID FROM ASSESSMENT_SESSION sess, ASSESSMENT assmnt
     WHERE sess.COURSE_YEAR = SUBSTR( TRIM(assmnt_key.ASSMT_SESSION), 0 , 4)
       AND sess.COURSE_MONTH = SUBSTR(TRIM(assmnt_key.ASSMT_SESSION), 5)
       AND assmnt.SESSION_ID = sess.SESSION_ID
       AND TRIM(assmnt_key.ASSMT_CODE) = assmnt.ASSESSMENT_TYPE_CODE) AS ASSESSMENT_ID,
    TRIM(assmnt_key.FORM_CODE) as FORM_CODE,
    'ASSESSMENT-API' as CREATE_USER,
    SYSDATE as CREATE_DATE,
    'ASSESSMENT-API' as UPDATE_USER,
    SYSDATE as UPDATE_DATE
FROM TAB_GRAD_ASSMT_KEY assmnt_key;

INSERT INTO ASSESSMENT (ASSESSMENT_ID, ASSESSMENT_TYPE_CODE, SESSION_ID, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        'LTP10',
        (SELECT SESSION_ID FROM ASSESSMENT_SESSION sess
         WHERE sess.COURSE_YEAR = '2019'
           AND sess.COURSE_MONTH = '06'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT (ASSESSMENT_ID, ASSESSMENT_TYPE_CODE, SESSION_ID, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        'LTE12',
        (SELECT SESSION_ID FROM ASSESSMENT_SESSION sess
         WHERE sess.COURSE_YEAR = '2019'
           AND sess.COURSE_MONTH = '06'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);


INSERT INTO ASSESSMENT (ASSESSMENT_ID, ASSESSMENT_TYPE_CODE, SESSION_ID, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        'LTE10',
        (SELECT SESSION_ID FROM ASSESSMENT_SESSION sess
         WHERE sess.COURSE_YEAR = '2018'
           AND sess.COURSE_MONTH = '11'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT (ASSESSMENT_ID, ASSESSMENT_TYPE_CODE, SESSION_ID, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        'LTF12',
        (SELECT SESSION_ID FROM ASSESSMENT_SESSION sess
         WHERE sess.COURSE_YEAR = '2019'
           AND sess.COURSE_MONTH = '11'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT (ASSESSMENT_ID, ASSESSMENT_TYPE_CODE, SESSION_ID, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        'LTE12',
        (SELECT SESSION_ID FROM ASSESSMENT_SESSION sess
         WHERE sess.COURSE_YEAR = '2020'
           AND sess.COURSE_MONTH = '01'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT (ASSESSMENT_ID, ASSESSMENT_TYPE_CODE, SESSION_ID, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        'LTE10',
        (SELECT SESSION_ID FROM ASSESSMENT_SESSION sess
         WHERE sess.COURSE_YEAR = '2020'
           AND sess.COURSE_MONTH = '06'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT (ASSESSMENT_ID, ASSESSMENT_TYPE_CODE, SESSION_ID, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        'LTE12',
        (SELECT SESSION_ID FROM ASSESSMENT_SESSION sess
         WHERE sess.COURSE_YEAR = '2020'
           AND sess.COURSE_MONTH = '11'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT (ASSESSMENT_ID, ASSESSMENT_TYPE_CODE, SESSION_ID, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        'LTE12',
        (SELECT SESSION_ID FROM ASSESSMENT_SESSION sess
         WHERE sess.COURSE_YEAR = '2021'
           AND sess.COURSE_MONTH = '01'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT (ASSESSMENT_ID, ASSESSMENT_TYPE_CODE, SESSION_ID, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        'LTE12',
        (SELECT SESSION_ID FROM ASSESSMENT_SESSION sess
         WHERE sess.COURSE_YEAR = '2021'
           AND sess.COURSE_MONTH = '06'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT (ASSESSMENT_ID, ASSESSMENT_TYPE_CODE, SESSION_ID, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        'LTF12',
        (SELECT SESSION_ID FROM ASSESSMENT_SESSION sess
         WHERE sess.COURSE_YEAR = '2021'
           AND sess.COURSE_MONTH = '06'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT (ASSESSMENT_ID, ASSESSMENT_TYPE_CODE, SESSION_ID, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        'LTP12',
        (SELECT SESSION_ID FROM ASSESSMENT_SESSION sess
         WHERE sess.COURSE_YEAR = '2021'
           AND sess.COURSE_MONTH = '06'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

INSERT INTO ASSESSMENT (ASSESSMENT_ID, ASSESSMENT_TYPE_CODE, SESSION_ID, CREATE_USER, CREATE_DATE, UPDATE_USER, UPDATE_DATE)
VALUES (LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')),
        'LTF12',
        (SELECT SESSION_ID FROM ASSESSMENT_SESSION sess
         WHERE sess.COURSE_YEAR = '2021'
           AND sess.COURSE_MONTH =  '11'),
        'ASSESSMENT-API', SYSDATE,'ASSESSMENT-API',SYSDATE);

CREATE TABLE ASSESSMENT_COMPONENT
as
SELECT
    LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')) as ASSESSMENT_COMPONENT_ID,
    (SELECT form.ASSESSMENT_FORM_ID FROM ASSESSMENT_SESSION sess, ASSESSMENT assmnt, ASSESSMENT_FORM form
     WHERE sess.COURSE_YEAR = SUBSTR( TRIM(assmnt_comp.ASSMT_SESSION), 0 , 4)
       AND sess.COURSE_MONTH = SUBSTR(TRIM(assmnt_comp.ASSMT_SESSION), 5)
       AND assmnt.SESSION_ID = sess.SESSION_ID
       AND assmnt.ASSESSMENT_ID = form.ASSESSMENT_ID
       AND TRIM(assmnt_comp.FORM_CODE) = form.FORM_CODE
       AND TRIM(assmnt_comp.ASSMT_CODE) = assmnt.ASSESSMENT_TYPE_CODE) AS ASSESSMENT_FORM_ID,
    TRIM(assmnt_comp.MC_OE_FLAG) as COMPONENT_TYPE_CODE,
    TRIM(assmnt_comp.COMPONENT_TYPE) as COMPONENT_SUB_TYPE_CODE,
    TRIM(assmnt_comp.QUESTION_COUNT) as QUESTION_COUNT,
    TRIM(assmnt_comp.NUM_OMITS) as NUM_OMITS,
    TRIM(assmnt_comp.OE_ITEM_CNT) as OE_ITEM_CNT,
    TRIM(assmnt_comp.OE_MARK_COUNT) as OE_MARK_COUNT,
    TRIM(assmnt_comp.PRINT_MATERIALS_FLAG) as PRINT_MATERIALS_FLAG,
    'ASSESSMENT-API' as CREATE_USER,
    SYSDATE as CREATE_DATE,
    'ASSESSMENT-API' as UPDATE_USER,
    SYSDATE as UPDATE_DATE
FROM TAB_GRAD_ASSMT_COMP assmnt_comp;

CREATE TABLE ASSESSMENT_QUESTION
as
SELECT
    LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')) as ASSESSMENT_QUESTION_ID,
    (SELECT comp.ASSESSMENT_COMPONENT_ID FROM ASSESSMENT_SESSION sess, ASSESSMENT assmnt, ASSESSMENT_FORM form, ASSESSMENT_COMPONENT comp
     WHERE sess.COURSE_YEAR = SUBSTR( TRIM(assmnt_ques.ASSMT_SESSION), 0 , 4)
       AND sess.COURSE_MONTH = SUBSTR(TRIM(assmnt_ques.ASSMT_SESSION), 5)
       AND assmnt.SESSION_ID = sess.SESSION_ID
       AND assmnt.ASSESSMENT_ID = form.ASSESSMENT_ID
       AND form.ASSESSMENT_FORM_ID = comp.ASSESSMENT_FORM_ID
       AND (TRIM(assmnt_ques.COMPONENT_TYPE) = comp.COMPONENT_SUB_TYPE_CODE OR TRIM(assmnt_ques.COMPONENT_TYPE) IS NULL AND TRIM(comp.COMPONENT_SUB_TYPE_CODE) IS NULL)
       AND TRIM(assmnt_ques.MC_OE_FLAG) = comp.COMPONENT_TYPE_CODE
       AND TRIM(assmnt_ques.FORM_CODE) = form.FORM_CODE
       AND TRIM(assmnt_ques.ASSMT_CODE) = assmnt.ASSESSMENT_TYPE_CODE) AS ASSESSMENT_COMPONENT_ID,
    TRIM(assmnt_ques.QUES_NUMBER) as QUESTION_NUMBER,
    TRIM(assmnt_ques.COGN_LEVEL) as COGN_LEVEL_CODE,
    TRIM(assmnt_ques.ASSMT_SECTION) as ASSMT_SECTION,
    TRIM(assmnt_ques.CLAIM_CODE) as CLAIM_CODE,
    TRIM(assmnt_ques.TASK_CODE) as TASK_CODE,
    TRIM(assmnt_ques.CONTEXT_CODE) as CONTEXT_CODE,
    TRIM(assmnt_ques.CONCEPTS_CODE) as CONCEPTS_CODE,
    TRIM(assmnt_ques.ITEM_NUMBER) as ITEM_NUMBER,
    TRIM(assmnt_ques.QUES_VALUE) as QUESTION_VALUE,
    TRIM(assmnt_ques.MAX_QUES_VALUE) as MAX_QUES_VALUE,
    TRIM(assmnt_ques.MASTER_QUES_NUMBER) as MASTER_QUES_NUMBER,
    TRIM(assmnt_ques.IRT_INCREMENT) as IRT_INCREMENT,
    TRIM(assmnt_ques.PRELOAD_ANSWER_STRING) as PRELOAD_ANSWER,
    TRIM(assmnt_ques.IRT_COLUMN) as IRT,
    'ASSESSMENT-API' as CREATE_USER,
    SYSDATE as CREATE_DATE,
    'ASSESSMENT-API' as UPDATE_USER,
    SYSDATE as UPDATE_DATE
FROM TAB_GRAD_ASSMT_QUES assmnt_ques;

CREATE TABLE ASSESSMENT_ANSWER
as
SELECT
    LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')) as ASSESSMENT_ANSWER_ID,
    (SELECT comp.ASSESSMENT_COMPONENT_ID FROM ASSESSMENT_SESSION sess, ASSESSMENT assmnt, ASSESSMENT_FORM form, ASSESSMENT_COMPONENT comp
     WHERE sess.COURSE_YEAR = SUBSTR( TRIM(assmnt_answer.ASSMT_SESSION), 0 , 4)
       AND sess.COURSE_MONTH = SUBSTR(TRIM(assmnt_answer.ASSMT_SESSION), 5)
       AND assmnt.SESSION_ID = sess.SESSION_ID
       AND assmnt.ASSESSMENT_ID = form.ASSESSMENT_ID
       AND form.ASSESSMENT_FORM_ID = comp.ASSESSMENT_FORM_ID
       AND (TRIM(assmnt_answer.COMPONENT_TYPE) = comp.COMPONENT_SUB_TYPE_CODE OR TRIM(assmnt_answer.COMPONENT_TYPE) IS NULL AND TRIM(comp.COMPONENT_SUB_TYPE_CODE) IS NULL)
       AND TRIM(assmnt_answer.MC_OE_FLAG) = comp.COMPONENT_TYPE_CODE
       AND TRIM(assmnt_answer.FORM_CODE) = form.FORM_CODE
       AND TRIM(assmnt_answer.ASSMT_CODE) = assmnt.ASSESSMENT_TYPE_CODE) AS ASSESSMENT_COMPONENT_ID,
    (SELECT ques.ASSESSMENT_QUESTION_ID FROM ASSESSMENT_SESSION sess, ASSESSMENT assmnt, ASSESSMENT_FORM form, ASSESSMENT_QUESTION ques, ASSESSMENT_COMPONENT comp
     WHERE sess.COURSE_YEAR = SUBSTR( TRIM(assmnt_answer.ASSMT_SESSION), 0 , 4)
       AND sess.COURSE_MONTH = SUBSTR(TRIM(assmnt_answer.ASSMT_SESSION), 5)
       AND assmnt.SESSION_ID = sess.SESSION_ID
       AND assmnt.ASSESSMENT_ID = form.ASSESSMENT_ID
       AND form.ASSESSMENT_FORM_ID = comp.ASSESSMENT_FORM_ID
       AND comp.ASSESSMENT_COMPONENT_ID = ques.ASSESSMENT_COMPONENT_ID
       AND TRIM(assmnt_answer.QUES_NUMBER) = ques.QUESTION_NUMBER
       AND TRIM(assmnt_answer.ITEM_NUMBER) = ques.ITEM_NUMBER
       AND (TRIM(assmnt_answer.COMPONENT_TYPE) = comp.COMPONENT_SUB_TYPE_CODE OR TRIM(assmnt_answer.COMPONENT_TYPE) IS NULL AND TRIM(comp.COMPONENT_SUB_TYPE_CODE) IS NULL)
       AND TRIM(assmnt_answer.MC_OE_FLAG) = comp.COMPONENT_TYPE_CODE
       AND TRIM(assmnt_answer.FORM_CODE) = form.FORM_CODE
       AND TRIM(assmnt_answer.ASSMT_CODE) = assmnt.ASSESSMENT_TYPE_CODE) AS ASSESSMENT_QUESTION_ID,
    TRIM(assmnt_answer.QUES_NUMBER) as QUESTION_NUMBER,
    TRIM(assmnt_answer.COGN_LEVEL) as COGN_LEVEL_CODE,
    TRIM(assmnt_answer.CLAIM_CODE) as CLAIM_CODE,
    TRIM(assmnt_answer.TASK_CODE) as TASK_CODE,
    TRIM(assmnt_answer.CONTEXT_CODE) as CONTEXT_CODE,
    TRIM(assmnt_answer.CONCEPTS_CODE) as CONCEPTS_CODE,
    TRIM(assmnt_answer.ITEM_NUMBER) as ITEM_NUMBER,
    TRIM(assmnt_answer.QUES_VALUE) as QUESTION_VALUE,
    TRIM(assmnt_answer.OE_ITEM_TYPE) as OE_ITEM_TYPE,
    TRIM(assmnt_answer.ANSWER_NUMBER) as ANSWER_NUMBER,
    TRIM(assmnt_answer.MC_QUES_TYPE) as MC_QUES_TYPE,
    TRIM(assmnt_answer.MC_ANSWER_STRING) as MC_ANSWER,
    TRIM(assmnt_answer.MC_ANSWER_LOWER) as MC_ANSWER_LOWER,
    TRIM(assmnt_answer.MC_ANSWER_UPPER) as MC_ANSWER_UPPER,
    TRIM(assmnt_answer.IRT_COLUMN) as IRT,
    TRIM(assmnt_answer.LINKED_ITEM_NUMBER) as LINKED_ITEM_NUMBER,
    TRIM(assmnt_answer.SCALE_FACTOR) as SCALE_FACTOR,
    'ASSESSMENT-API' as CREATE_USER,
    SYSDATE as CREATE_DATE,
    'ASSESSMENT-API' as UPDATE_USER,
    SYSDATE as UPDATE_DATE
FROM TAB_GRAD_ASSMT_ANSW assmnt_answer;

UPDATE ASSESSMENT_COMPONENT
SET COMPONENT_SUB_TYPE_CODE = 'NONE'
WHERE TRIM(COMPONENT_SUB_TYPE_CODE) IS NULL;

CREATE INDEX ASSESSMENT_SESSION_COURSE_YEAR_INDX
    ON ASSESSMENT_SESSION(COURSE_YEAR);

CREATE INDEX ASSESSMENT_SESSION_COURSE_MONTH_INDX
    ON ASSESSMENT_SESSION(COURSE_MONTH);

CREATE INDEX ASSESSMENT_TYPE_CODE_INDX
    ON ASSESSMENT(ASSESSMENT_TYPE_CODE);

CREATE INDEX ASSESSMENT_FORM_CODE_INDX
    ON ASSESSMENT_FORM(FORM_CODE);

CREATE INDEX ASSESSMENT_ID_INDX
    ON ASSESSMENT(ASSESSMENT_ID);

CREATE INDEX STUDENT_LINK_PEN_INDX
    ON STUDENT_LINK(PEN);

CREATE TABLE ASSESSMENT_STUDENT
as
SELECT
    LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')) as ASSESSMENT_STUDENT_ID,
    (SELECT assmnt.ASSESSMENT_ID FROM ASSESSMENT_SESSION sess, ASSESSMENT assmnt
     WHERE sess.COURSE_YEAR = SUBSTR( TRIM(assmnt_stud.ASSMT_SESSION), 0 , 4)
       AND sess.COURSE_MONTH = SUBSTR(TRIM(assmnt_stud.ASSMT_SESSION), 5)
       AND assmnt.SESSION_ID = sess.SESSION_ID
       AND TRIM(assmnt_stud.ASSMT_CODE) = assmnt.ASSESSMENT_TYPE_CODE) AS ASSESSMENT_ID,
    TRIM(assmnt_stud.STUD_NO) as PEN,
    (SELECT LOWER(REGEXP_REPLACE(STUDENT_ID, '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5'))
     FROM STUDENT_LINK stud_link
     WHERE stud_link.PEN = TRIM(assmnt_stud.STUD_NO)) AS STUDENT_ID,
    (SELECT form.ASSESSMENT_FORM_ID FROM ASSESSMENT_SESSION sess, ASSESSMENT assmnt, ASSESSMENT_FORM form
     WHERE sess.COURSE_YEAR = SUBSTR( TRIM(assmnt_stud.ASSMT_SESSION), 0 , 4)
       AND sess.COURSE_MONTH = SUBSTR(TRIM(assmnt_stud.ASSMT_SESSION), 5)
       AND assmnt.SESSION_ID = sess.SESSION_ID
       AND assmnt.ASSESSMENT_ID = form.ASSESSMENT_ID
       AND TRIM(assmnt_stud.FORM_CODE) = form.FORM_CODE
       AND TRIM(assmnt_stud.ASSMT_CODE) = assmnt.ASSESSMENT_TYPE_CODE) AS ASSESSMENT_FORM_ID,
    TRIM(assmnt_stud.LOCAL_ASSMT_ID) as LOCAL_ASSESSMENT_ID,
    (SELECT schl.SCHOOL_ID from SCHOOL schl WHERE SUBSTR( TRIM(assmnt_stud.MINCODE_HOME), 4) = schl.SCHOOL_NUMBER AND SUBSTR( TRIM(assmnt_stud.MINCODE_HOME), 0 , 3) = (SELECT dist.DISTRICT_NUMBER from DISTRICT dist WHERE schl.DISTRICT_ID = dist.DISTRICT_ID)) as SCHOOL_AT_WRITE_SCHOOL_ID,
    (SELECT schl.SCHOOL_ID from SCHOOL schl WHERE SUBSTR( TRIM(assmnt_stud.MINCODE_ASSMT), 4) = schl.SCHOOL_NUMBER AND SUBSTR( TRIM(assmnt_stud.MINCODE_ASSMT), 0 , 3) = (SELECT dist.DISTRICT_NUMBER from DISTRICT dist WHERE schl.DISTRICT_ID = dist.DISTRICT_ID)) as ASSESSMENT_CENTER_SCHOOL_ID,
    (SELECT LEGAL_LAST_NAME
     FROM STUDENT_LINK stud_link
     WHERE stud_link.PEN = TRIM(assmnt_stud.STUD_NO)) AS SURNAME,
    (SELECT LEGAL_FIRST_NAME
     FROM STUDENT_LINK stud_link
     WHERE stud_link.PEN = TRIM(assmnt_stud.STUD_NO)) AS GIVEN_NAME,
    CASE
        WHEN TRIM(assmnt_stud.ASSMT_PRINT_CODE) = 'E' THEN 'true'
        ELSE 'false'
    END as IS_ELECTRONIC_ASSESSMENT,
    TRIM(assmnt_stud.SPECIAL_CASE) as PROVINCIAL_SPECIAL_CASE_CODE,
    TRIM(assmnt_stud.PERCENT_COMPLETE) as PERCENT_COMPLETE,
    TRIM(assmnt_stud.ASSMT_PROFICIENCY_SCORE) as PROFICIENCY_SCORE,
    TRIM(assmnt_stud.RAW_SCORE) as RAW_SCORE,
    TRIM(assmnt_stud.IRT_SCORE) as IRT_SCORE,
    TRIM(assmnt_stud.MC_TOTAL) as MC_TOTAL,
    TRIM(assmnt_stud.OE_TOTAL) as OE_TOTAL,
    TRIM(assmnt_stud.ADAPTED_ASSMT) as ADAPTED_ASSESSMENT_INDICATOR,
    TRIM(assmnt_stud.MARKING_SESSION) as MARKING_SESSION,
    'ASSESSMENT-API' as CREATE_USER,
    SYSDATE as CREATE_DATE,
    'ASSESSMENT-API' as UPDATE_USER,
    SYSDATE as UPDATE_DATE
FROM STUD_GRAD_ASSMT assmnt_stud;

ALTER TABLE ASSESSMENT_STUDENT
    ADD SCHOOL_OF_RECORD_SCHOOL_ID VARCHAR(40);

ALTER TABLE GRADUATION_STUDENT_RECORD
    RENAME COLUMN GRADUATION_STUDENT_RECORD_ID TO GRADUATION_STUDENT_RECORD_ID_RAW;

ALTER TABLE GRADUATION_STUDENT_RECORD
    RENAME COLUMN SCHOOL_OF_RECORD_ID TO SCHOOL_OF_RECORD_ID_RAW;

ALTER TABLE GRADUATION_STUDENT_RECORD
    ADD GRADUATION_STUDENT_RECORD_ID VARCHAR(40);

ALTER TABLE GRADUATION_STUDENT_RECORD
    ADD SCHOOL_OF_RECORD_ID VARCHAR(40);

CREATE INDEX GRADUATION_STUDENT_RECORD_ID_RAW_INDX
    ON GRADUATION_STUDENT_RECORD(GRADUATION_STUDENT_RECORD_ID_RAW);

UPDATE GRADUATION_STUDENT_RECORD
SET GRADUATION_STUDENT_RECORD_ID = LOWER(REGEXP_REPLACE(GRADUATION_STUDENT_RECORD_ID_RAW, '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5'));

UPDATE GRADUATION_STUDENT_RECORD
SET SCHOOL_OF_RECORD_ID = LOWER(REGEXP_REPLACE(SCHOOL_OF_RECORD_ID_RAW, '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5'));

CREATE INDEX GRADUATION_STUDENT_RECORD_ID_INDX
    ON GRADUATION_STUDENT_RECORD(GRADUATION_STUDENT_RECORD_ID);

CREATE INDEX ASSESSMENT_STUDENT_PEN_INDX
    ON ASSESSMENT_STUDENT(PEN);

DELETE FROM ASSESSMENT_STUDENT WHERE STUDENT_ID IS NULL;

CREATE TABLE ASSESSMENT_STUDENT_COMPONENT
as
SELECT
    LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')) as ASSESSMENT_STUDENT_COMPONENT_ID,
    (SELECT stud.ASSESSMENT_STUDENT_ID FROM ASSESSMENT_SESSION sess, ASSESSMENT assmnt, ASSESSMENT_STUDENT stud
     WHERE sess.COURSE_YEAR = SUBSTR( TRIM(assmnt_comp.ASSMT_SESSION), 0 , 4)
       AND sess.COURSE_MONTH = SUBSTR(TRIM(assmnt_comp.ASSMT_SESSION), 5)
       AND assmnt.SESSION_ID = sess.SESSION_ID
       AND stud.ASSESSMENT_ID = assmnt.ASSESSMENT_ID
       AND TRIM(assmnt_comp.STUD_NO) = stud.PEN
       AND TRIM(assmnt_comp.ASSMT_CODE) = assmnt.ASSESSMENT_TYPE_CODE) AS ASSESSMENT_STUDENT_ID,
    TRIM(assmnt_comp.ASSMT_CODE) as ASSMT_CODE,
    TRIM(assmnt_comp.ASSMT_SESSION) as ASSMT_SESSION,
    TRIM(assmnt_comp.STUD_NO) as STUD_NO,
    TRIM(assmnt_comp.MC_OE_FLAG) as COMPONENT_TYPE_CODE,
    TRIM(assmnt_comp.COMPONENT_TYPE) as COMPONENT_SUB_TYPE_CODE,
    TRIM(assmnt_comp.COMPONENT_TOTAL) as COMPONENT_TOTAL,
    TRIM(assmnt_comp.COMPONENT_SOURCE) as COMPONENT_SOURCE,
    TRIM(assmnt_comp.CHOICE_PATH_ID) as CHOICE_PATH_ID,
    'ASSESSMENT-API' as CREATE_USER,
    SYSDATE as CREATE_DATE,
    'ASSESSMENT-API' as UPDATE_USER,
    SYSDATE as UPDATE_DATE
FROM STUD_GRAD_ASSMT_COMP assmnt_comp
WHERE (SELECT stud.ASSESSMENT_STUDENT_ID FROM ASSESSMENT_SESSION sess, ASSESSMENT assmnt, ASSESSMENT_STUDENT stud
       WHERE sess.COURSE_YEAR = SUBSTR( TRIM(assmnt_comp.ASSMT_SESSION), 0 , 4)
         AND sess.COURSE_MONTH = SUBSTR(TRIM(assmnt_comp.ASSMT_SESSION), 5)
         AND assmnt.SESSION_ID = sess.SESSION_ID
         AND stud.ASSESSMENT_ID = assmnt.ASSESSMENT_ID
         AND TRIM(assmnt_comp.STUD_NO) = stud.PEN
         AND TRIM(assmnt_comp.ASSMT_CODE) = assmnt.ASSESSMENT_TYPE_CODE) IS NOT NULL;


CREATE INDEX ASSESSMENT_STUDENT_COMPONENT_INDX
    ON ASSESSMENT_STUDENT_COMPONENT(STUD_NO);

CREATE INDEX ASSESSMENT_STUDENT_COMPONENT_COMP_INDX
    ON ASSESSMENT_STUDENT_COMPONENT(COMPONENT_TYPE_CODE);

CREATE INDEX ASSESSMENT_STUDENT_COMPONENT_COMP_SUB_INDX
    ON ASSESSMENT_STUDENT_COMPONENT(COMPONENT_SUB_TYPE_CODE);

CREATE INDEX ASSESSMENT_STUDENT_COMPONENT_SESS_INDX
    ON ASSESSMENT_STUDENT_COMPONENT(ASSMT_SESSION);

CREATE INDEX ASSESSMENT_STUDENT_COMPONENT_CODE_INDX
    ON ASSESSMENT_STUDENT_COMPONENT(ASSMT_CODE);

UPDATE ASSESSMENT_STUDENT_COMPONENT
SET COMPONENT_SUB_TYPE_CODE = 'NONE'
WHERE COMPONENT_SUB_TYPE_CODE IS NULL;

UPDATE STUD_GRAD_ASSMT_MCOE_MR
SET COMPONENT_TYPE = 'NONE'
WHERE TRIM(COMPONENT_TYPE) IS NULL;

CREATE INDEX STUD_GRAD_ASSMT_MCOE_MR_STUDNO_INDX
    ON STUD_GRAD_ASSMT_MCOE_MR(STUD_NO);

CREATE INDEX STUD_GRAD_ASSMT_MCOE_MR_ASSMTCODE_INDX
    ON STUD_GRAD_ASSMT_MCOE_MR(ASSMT_CODE);

CREATE INDEX STUD_GRAD_ASSMT_MCOE_MR_COMP_INDX
    ON STUD_GRAD_ASSMT_MCOE_MR(COMPONENT_TYPE);

CREATE INDEX STUD_GRAD_ASSMT_MCOE_MR_COMP_SUB_INDX
    ON STUD_GRAD_ASSMT_MCOE_MR(MC_OE_FLAG);

CREATE INDEX STUD_GRAD_ASSMT_MCOE_MR_SESS_INDX
    ON STUD_GRAD_ASSMT_MCOE_MR(ASSMT_SESSION);

CREATE TABLE ASSESSMENT_STUDENT_ANSWER
as
SELECT
    LOWER(REGEXP_REPLACE(dbms_crypto.randombytes(16), '(.{8})(.{4})(.{4})(.{4})(.{12})', '\1-\2-\3-\4-\5')) as ASSESSMENT_STUDENT_ANSWER_ID,
    (SELECT comp.ASSESSMENT_STUDENT_COMPONENT_ID FROM ASSESSMENT_STUDENT_COMPONENT comp
     WHERE TRIM(assmnt_mc.COMPONENT_TYPE) = comp.COMPONENT_SUB_TYPE_CODE
       AND TRIM(assmnt_mc.MC_OE_FLAG) = comp.COMPONENT_TYPE_CODE
       AND TRIM(assmnt_mc.ASSMT_SESSION) = comp.ASSMT_SESSION
       AND TRIM(assmnt_mc.STUD_NO) = comp.STUD_NO
       AND TRIM(assmnt_mc.ASSMT_CODE) = comp.ASSMT_CODE) AS ASSESSMENT_STUDENT_COMPONENT_ID,
    TRIM(assmnt_mc.ITEM_NUMBER) as ITEM_NUMBER,
    TRIM(assmnt_mc.QUES_NUMBER) as QUESTION_NUMBER,
    TRIM(assmnt_mc.MC_ASSMNT_RESP_UNSORTED) as MC_ASSESSMENT_RESPONSE_UNSORTED,
    TRIM(assmnt_mc.MC_ASSMNT_RESP_SORTED) as MC_ASSESSMENT_RESPONSE_SORTED,
    TRIM(assmnt_mc.SCORE) as SCORE,
    'ASSESSMENT-API' as CREATE_USER,
    SYSDATE as CREATE_DATE,
    'ASSESSMENT-API' as UPDATE_USER,
    SYSDATE as UPDATE_DATE
FROM STUD_GRAD_ASSMT_MCOE_MR assmnt_mc;


ALTER TABLE ASSESSMENT_STUDENT_COMPONENT
DROP COLUMN ASSMT_CODE;

ALTER TABLE ASSESSMENT_STUDENT_COMPONENT
DROP COLUMN ASSMT_SESSION;

ALTER TABLE ASSESSMENT_STUDENT_COMPONENT
DROP COLUMN STUD_NO;

DELETE FROM ASSESSMENT_STUDENT_ANSWER WHERE ASSESSMENT_STUDENT_COMPONENT_ID IS NULL;